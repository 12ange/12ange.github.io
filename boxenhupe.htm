<!DOCTYPE html>
<html lang="ja">
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width,minimum-scale=1">
<title>＜))) ポヨヨヨヨヨヨヨ</title>
<style>
.pseudobutton{
	border:.5em outset #ddd;
	background-color:#ccc;
	height:50vmin;
	margin:auto;
	padding:.5em;
	text-align:center;
	width:50vmin;
}
.pseudobutton.down{
	border-style:inset;
	border-color:#9f9;
	background-color:#bfb;
	}
</style>
</head>
<body>
<h1>BOXENHUPE NÜRBURGRING</h1>
<h3>ニュル24h視聴中に時折聞こえる、競技車両がピットレーンに入ってきたときの警告音</h3>
<div class="pseudobutton">＜))) ポヨヨヨヨヨヨヨ</div>
<!--
<fieldset>
	<legend>オプション</legend>
	<ul>
		<li>基底周波数 880 Hz</li>
		<li>detune周波数 7 Hz</li>
		<li>detune振幅 ± 125 cent</li>
	</ul>
</fieldset>
-->
<script>
"use strict";
const	divHooter = document.getElementsByClassName("pseudobutton")[0],
	gAudioCtx = new (window.AudioContext || window.webkitAudioContext)();
let oscMain=null, oscDet=null, isPreplay=true, isPlaying=false;


function startHooter(e){
	if(isPreplay){
		gAudioCtx.resume();
		isPreplay=false;
	}
	if(isPlaying){return} //再生中なら無視

	//生成
	oscMain = gAudioCtx.createOscillator();
	oscDet = gAudioCtx.createOscillator();
	let gain = gAudioCtx.createGain()

	oscMain.frequency.value = 880;
	gain.gain.value = 125;
	oscDet.frequency.value = 7;

	//接続
	oscMain.connect(gAudioCtx.destination);
	oscDet.connect(gain).connect(oscMain.detune);
	//鳴動
	oscMain.start();
	oscDet.start();
	isPlaying=true;

	divHooter.classList.add("down");
}
function stopHooter(e){
	if(!isPlaying){return}
	isPlaying=false;
	//鳴動中ならソースとなるオシレータを把握しているから、止めてバラして解放する
	oscMain.stop();
	oscMain.disconnect();
	oscMain = null;
	oscDet.stop();
	oscDet.disconnect();
	oscDet = null;

	divHooter.classList.remove("down");
}

divHooter.addEventListener("mousedown",startHooter);
divHooter.addEventListener("mouseup",stopHooter);
divHooter.addEventListener("mouseleave",stopHooter);

</script>
</body>
</html>
